<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>理论 - 分类 - 程序猿二腊</title>
        <link>https://atuowgo.github.io/categories/theory/</link>
        <description>理论 - 分类 - 程序猿二腊</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 02 Feb 2023 01:36:54 -0700</lastBuildDate><atom:link href="https://atuowgo.github.io/categories/theory/" rel="self" type="application/rss+xml" /><item>
    <title>深度学习-感知机</title>
    <link>https://atuowgo.github.io/deeplearning_01_perceptron/</link>
    <pubDate>Thu, 02 Feb 2023 01:36:54 -0700</pubDate>
    <author>二腊</author>
    <guid>https://atuowgo.github.io/deeplearning_01_perceptron/</guid>
    <description><![CDATA[感知机 最近陈硕在给我授课，讲深度学习，第一节内容主要是感知机
1. 什么是感知机 感知机是二分类的线性模型，其输入是实例的特征向量，输出的是实例的类别，分别为0和1，属于判别模型。感知机接收多个输入信号，输出一个信号。
下图是一个接收两个输入信号的感知机的例子。
其中$x_{1}、 x_{2}$是输入信号，$y$是输出信号， $w_{1}、 w_{2}$是权重。图中的○称为“神经元”或者“节点”。输入信号被送往神经元时，会被分别乘以固定的权重。神经元会计算传送过来的信号的总和（$w_{1}x_{1} + w_{2}x_{2}$），只有当这个总和超过了某个界限值时，才会输出1。这也称为“神经元被激活” 。这里将这个界限值称为阈值，用符号$\theta$表示。
把上述内容用数学式来表示，就是下面这个式子 $$ y = \begin{cases} 0 \ (w_{1}x_{1} + w_{2}x_{2} \le \theta)\ 1 \ (w_{1}x_{1} + w_{2}x_{2} \gt \theta)\ \end{cases} \ (1.1) $$
2. 感知机模型 感知机是有生物学上的一个启发，我们的大脑可以认为是一个神经网络，这么一个生物的神经网络是由神经元组织起来的，在这个生物的神经网络里边，神经元的一些工作机制就是通过这样一个下面图的结构来运行的。首先接收到一些信号，这些信号通过这些树突组织，树突组织接收到这些信号送到细胞里边的细胞核，这些细胞核对接收到的这些信号（如光、声音）到树突的时候会产生一些微弱的生物电，从而形成一些刺激，那么在细胞核里边对这些收集到的接收到的刺激进行综合的处理，当它的信号达到了一定的阈值之后，它就会被激活，从而产生一个刺激的输出，那么就会形成一个我们大脑接收到的进一步的信号，再通过轴突来输出计算的，这就是我们人脑的一个神经元进行感知的时候大致的一个工作原理。
结合神经元模型有人提出了经典的抽象模型：M-P神经元模型，如下图
而感知机模型是从神经元模型发展过来的。感知机是由两层神经元组成的一个简单模型。只有输出层是M-P 神经元，即只有输出层神经元进行激活函数处理，也称为功能神经元（ functional neuron）；输入层只是接受外界信号（样本属性）并传递给输出层（输入层的神经元个数等于样本的属性数目），而没有激活函数。
(1.1)公式对应
将输入和权重扩展到多维，则式子(1.1)可以表示为 $$ y = \begin{cases} 0 \ (\sum w_{i}x_{i} - \theta \le 0)\ 1 \ (\sum w_{i}x_{i} - \theta \gt 0)\ \end{cases} \ (2.1) $$]]></description>
</item>
</channel>
</rss>
